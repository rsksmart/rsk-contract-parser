{"version":3,"file":"bridgeAbi.js","names":["_bridgeOrchid","_interopRequireDefault","require","_bridgeWasabi","_bridgePapyrus","_bridgeIris","_bridgeFingerroot","_bridgeHop","obj","__esModule","default","RELEASES","exports","mainnet","height","abi","orchid","wasabi","papyrus","iris","hop","fingerroot","testnet","findmatchingAbi","txHeight","abisWithHeight","lastIndex","length","undefined","i","previous","getBridgeAbi","txBlockNumber","bitcoinNetwork","includes","Error"],"sources":["../../../src/lib/nativeContracts/bridgeAbi.js"],"sourcesContent":["import orchid from './bridge-orchid.json'\nimport wasabi from './bridge-wasabi.json'\nimport papyrus from './bridge-papyrus.json'\nimport iris from './bridge-iris.json'\nimport fingerroot from './bridge-fingerroot.json'\nimport hop from './bridge-hop.json'\n\nexport const RELEASES = {\n  mainnet: [\n    { height: 0, abi: orchid },\n    { height: 1591000, abi: wasabi },\n    { height: 2392700, abi: papyrus },\n    { height: 3614800, abi: iris },\n    { height: 4598500, abi: hop },\n    { height: 5468000, abi: fingerroot }\n  ],\n  testnet: [\n    { height: 0, abi: wasabi },\n    { height: 863000, abi: papyrus },\n    { height: 2060500, abi: iris },\n    { height: 3103000, abi: hop },\n    { height: 4015800, abi: fingerroot }\n  ]\n}\n\nfunction findmatchingAbi (txHeight, abisWithHeight) {\n  const lastIndex = abisWithHeight.length - 1\n\n  if (txHeight >= abisWithHeight[lastIndex].height || txHeight === undefined) {\n    return abisWithHeight[lastIndex].abi\n  }\n\n  for (let i = 1; i <= lastIndex; i++) {\n    const previous = abisWithHeight[i - 1]\n    if (txHeight >= previous.height && txHeight < abisWithHeight[i].height) {\n      return previous.abi\n    }\n  }\n}\n\nexport function getBridgeAbi ({ txBlockNumber, bitcoinNetwork }) {\n  if (!['testnet', 'mainnet'].includes(bitcoinNetwork)) {\n    throw new Error('Invalid bitcoin network')\n  }\n\n  return findmatchingAbi(txBlockNumber, RELEASES[bitcoinNetwork])\n}\n"],"mappings":"yIAAA,IAAAA,aAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,cAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,WAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,iBAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,UAAA,GAAAN,sBAAA,CAAAC,OAAA,uBAAmC,SAAAD,uBAAAO,GAAA,UAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;;AAE5B,MAAMG,QAAQ,GAAAC,OAAA,CAAAD,QAAA,GAAG;EACtBE,OAAO,EAAE;EACP,EAAEC,MAAM,EAAE,CAAC,EAAEC,GAAG,EAAEC,qBAAM,CAAC,CAAC;EAC1B,EAAEF,MAAM,EAAE,OAAO,EAAEC,GAAG,EAAEE,qBAAM,CAAC,CAAC;EAChC,EAAEH,MAAM,EAAE,OAAO,EAAEC,GAAG,EAAEG,sBAAO,CAAC,CAAC;EACjC,EAAEJ,MAAM,EAAE,OAAO,EAAEC,GAAG,EAAEI,mBAAI,CAAC,CAAC;EAC9B,EAAEL,MAAM,EAAE,OAAO,EAAEC,GAAG,EAAEK,kBAAG,CAAC,CAAC;EAC7B,EAAEN,MAAM,EAAE,OAAO,EAAEC,GAAG,EAAEM,yBAAU,CAAC,CAAC,CACrC;;EACDC,OAAO,EAAE;EACP,EAAER,MAAM,EAAE,CAAC,EAAEC,GAAG,EAAEE,qBAAM,CAAC,CAAC;EAC1B,EAAEH,MAAM,EAAE,MAAM,EAAEC,GAAG,EAAEG,sBAAO,CAAC,CAAC;EAChC,EAAEJ,MAAM,EAAE,OAAO,EAAEC,GAAG,EAAEI,mBAAI,CAAC,CAAC;EAC9B,EAAEL,MAAM,EAAE,OAAO,EAAEC,GAAG,EAAEK,kBAAG,CAAC,CAAC;EAC7B,EAAEN,MAAM,EAAE,OAAO,EAAEC,GAAG,EAAEM,yBAAU,CAAC,CAAC;;AAExC,CAAC;;AAED,SAASE,eAAeA,CAAEC,QAAQ,EAAEC,cAAc,EAAE;EAClD,MAAMC,SAAS,GAAGD,cAAc,CAACE,MAAM,GAAG,CAAC;;EAE3C,IAAIH,QAAQ,IAAIC,cAAc,CAACC,SAAS,CAAC,CAACZ,MAAM,IAAIU,QAAQ,KAAKI,SAAS,EAAE;IAC1E,OAAOH,cAAc,CAACC,SAAS,CAAC,CAACX,GAAG;EACtC;;EAEA,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIH,SAAS,EAAEG,CAAC,EAAE,EAAE;IACnC,MAAMC,QAAQ,GAAGL,cAAc,CAACI,CAAC,GAAG,CAAC,CAAC;IACtC,IAAIL,QAAQ,IAAIM,QAAQ,CAAChB,MAAM,IAAIU,QAAQ,GAAGC,cAAc,CAACI,CAAC,CAAC,CAACf,MAAM,EAAE;MACtE,OAAOgB,QAAQ,CAACf,GAAG;IACrB;EACF;AACF;;AAEO,SAASgB,YAAYA,CAAE,EAAEC,aAAa,EAAEC,cAAc,CAAC,CAAC,EAAE;EAC/D,IAAI,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAACC,QAAQ,CAACD,cAAc,CAAC,EAAE;IACpD,MAAM,IAAIE,KAAK,CAAC,yBAAyB,CAAC;EAC5C;;EAEA,OAAOZ,eAAe,CAACS,aAAa,EAAErB,QAAQ,CAACsB,cAAc,CAAC,CAAC;AACjE"}