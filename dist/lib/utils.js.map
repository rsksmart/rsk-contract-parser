{"version":3,"file":"utils.js","names":["_rskUtils","require","_types","setAbi","abi","addSignatureDataToAbi","exports","abiEvents","filter","v","type","abiMethods","soliditySignature","name","keccak256","soliditySelector","signature","slice","solidityName","inputs","map","i","join","removeAbiSignatureData","Object","assign","undefined","ABI_SIGNATURE","getInputsIndexes","indexed","abiSignatureData","method","index","length","eventSignature","Buffer","from","toString","skip","value","erc165Id","selectors","id","s","reduce","a","bytes","INTERFACE_ID_BYTES","alloc","add0x","erc165IdFromMethods","methods","m","getSignatureDataFromAbi","filterEvents","events","keys","Set","e","k","find","concat","filterArr","Array","isArray","x","binarySearchNumber","searchCb","high","low","parseInt","Error","l","h","Promise","all","b","mid","Math","floor","res","err","reject"],"sources":["../../src/lib/utils.js"],"sourcesContent":["import { keccak256, add0x } from '@rsksmart/rsk-utils'\nimport { ABI_SIGNATURE, INTERFACE_ID_BYTES } from './types'\n\nexport const setAbi = abi => addSignatureDataToAbi(abi, true)\n\nexport const abiEvents = abi => abi.filter(v => v.type === 'event')\n\nexport const abiMethods = abi => abi.filter(v => v.type === 'function')\n\nexport const soliditySignature = name => keccak256(name)\n\nexport const soliditySelector = signature => signature.slice(0, 8)\n\nexport const solidityName = abi => {\n  let { name, inputs } = abi\n  inputs = (inputs) ? inputs.map(i => i.type) : []\n  return (name) ? `${name}(${inputs.join(',')})` : null\n}\n\nexport const removeAbiSignatureData = (abi) => {\n  abi = Object.assign({}, abi)\n  if (undefined !== abi[ABI_SIGNATURE]) delete abi[ABI_SIGNATURE]\n  return abi\n}\n\nexport const getInputsIndexes = abi => {\n  let { inputs } = abi\n  return (inputs && abi.type === 'event') ? inputs.map(i => i.indexed) : []\n}\n\nexport const abiSignatureData = abi => {\n  let method = solidityName(abi)\n  let signature = (method) ? soliditySignature(method) : null\n  let index = getInputsIndexes(abi)\n  let indexed = (index) ? index.filter(i => i === true).length : 0\n  let eventSignature = null\n  if ((method && abi.type === 'event')) {\n    eventSignature = soliditySignature(`${method}${Buffer.from(index).toString('hex')}`)\n  }\n  return { method, signature, index, indexed, eventSignature }\n}\n\nexport const addSignatureDataToAbi = (abi, skip) => {\n  abi.map((value, i) => {\n    if (!value[ABI_SIGNATURE] || !skip) {\n      value[ABI_SIGNATURE] = abiSignatureData(value)\n    }\n  })\n  return abi\n}\n\nexport const erc165Id = selectors => {\n  let id = selectors.map(s => Buffer.from(s, 'hex'))\n    .reduce((a, bytes) => {\n      for (let i = 0; i < INTERFACE_ID_BYTES; i++) {\n        a[i] = a[i] ^ bytes[i]\n      }\n      return a\n    }, Buffer.alloc(INTERFACE_ID_BYTES))\n  return add0x(id.toString('hex'))\n}\n\nexport const erc165IdFromMethods = methods => {\n  return erc165Id(methods.map(m => soliditySelector(soliditySignature(m))))\n}\n\nexport const getSignatureDataFromAbi = abi => {\n  return abi[ABI_SIGNATURE]\n}\n\nexport function filterEvents (abi) {\n  const type = 'event'\n  // get events from ABI\n  let events = abi.filter(a => a.type === type)\n  // remove events from ABI\n  abi = abi.filter(a => a.type !== type)\n  let keys = [...new Set(events.map(e => e[ABI_SIGNATURE].eventSignature))]\n  events = keys.map(k => events.find(e => e[ABI_SIGNATURE].eventSignature === k))\n  abi = abi.concat(events)\n  return abi\n}\n\nfunction filterArr (a) {\n  if (!Array.isArray(a)) return a\n  return a.find(x => filterArr(x))\n}\n\nexport async function binarySearchNumber (searchCb, high, low) {\n  try {\n    high = parseInt(high || 0)\n    low = parseInt(low || 0)\n    if (typeof searchCb !== 'function') throw new Error('SeachCb must be a function')\n    let [l, h] = await Promise.all([low, high].map(b => searchCb(b)))\n    if (l !== h) {\n      if (high === low + 1) {\n        return high\n      } else {\n        let mid = Math.floor(high / 2 + low / 2)\n        let res = await Promise.all([\n          binarySearchNumber(searchCb, high, mid),\n          binarySearchNumber(searchCb, mid, low)])\n        return filterArr(res)\n      }\n    }\n  } catch (err) {\n    return Promise.reject(err)\n  }\n}\n"],"mappings":"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"}