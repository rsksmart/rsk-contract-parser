{"version":3,"file":"btcUtils.js","names":["_crypto","_interopRequireDefault","require","bs58","_interopRequireWildcard","_rskUtils","_secp256k","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","PREFIXES","mainnet","pubKeyHash","scriptHash","testnet","regtest","getNetPrefix","netName","prefixes","Error","createHash","val","from","to","crypto","update","digest","sha256","remove0x","exports","h160","h160toAddress","hash160","network","prefixKey","prefix","Buffer","isBuffer","toString","check","slice","encode","pubToAddress","pub","parsePublic","compressed","secp256k1","publicKeyConvert","decompressPublic","compressPublic","rskAddressFromBtcPublicKey","cpk","add0x","keccak256"],"sources":["../../src/lib/btcUtils.js"],"sourcesContent":["import crypto from 'crypto'\nimport * as bs58 from 'bs58'\nimport { remove0x, add0x, keccak256 } from '@rsksmart/rsk-utils'\nimport secp256k1 from 'secp256k1'\n\nconst PREFIXES = {\n  mainnet: {\n    pubKeyHash: '00',\n    scriptHash: '05'\n  },\n  testnet: {\n    pubKeyHash: '6F',\n    scriptHash: 'C4'\n  },\n  regtest: {\n    pubKeyHash: '00',\n    scriptHash: '00'\n  }\n}\nconst getNetPrefix = netName => {\n  let prefixes = PREFIXES[netName]\n  if (!prefixes) throw new Error(`Unknown network ${netName}`)\n  return prefixes\n}\n\nconst createHash = (a, val, from = 'hex', to = 'hex') => crypto.createHash(a).update(val, from).digest(to)\n\nexport const sha256 = (val, from, to) => createHash('sha256', remove0x(val), from, to)\n\nexport const h160 = (val, from, to) => createHash('ripemd160', remove0x(val), from, to)\n\nexport const h160toAddress = (hash160, { network, prefixKey }) => {\n  network = network || 'mainnet'\n  prefixKey = prefixKey || 'pubKeyHash'\n  const prefix = getNetPrefix(network)[prefixKey]\n  hash160 = (Buffer.isBuffer(hash160)) ? hash160.toString('hex') : remove0x(hash160)\n  hash160 = `${prefix}${hash160}`\n  let check = sha256(sha256(hash160)).slice(0, 8)\n  return bs58.encode(Buffer.from(`${hash160}${check}`, 'hex'))\n}\n\nexport const pubToAddress = (pub, network) => {\n  return h160toAddress(h160(sha256(remove0x(pub))), { network })\n}\n\nexport const parsePublic = (pub, compressed) => {\n  pub = (!Buffer.isBuffer(pub)) ? Buffer.from(remove0x(pub), 'hex') : pub\n  return secp256k1.publicKeyConvert(pub, compressed)\n}\n\nexport const decompressPublic = compressed => parsePublic(compressed, false).toString('hex')\n\nexport const compressPublic = pub => parsePublic(pub, true).toString('hex')\n\nexport const rskAddressFromBtcPublicKey = cpk => add0x(keccak256(parsePublic(cpk, false).slice(1)).slice(-40))\n"],"mappings":"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"}